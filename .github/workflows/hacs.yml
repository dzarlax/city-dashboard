name: HACS Action

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 0 * * *"  # Run daily at midnight

jobs:
  hacs:
    name: HACS Validation
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"

  version-bump:
    name: Auto Version Bump & Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Read current version
        id: get_version
        run: |
          CURRENT_VERSION=$(jq -r .version custom_components/city_dashboard/manifest.json)
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_VERSION="$major.$minor.$((patch + 1))"
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update manifest.json
        run: |
          jq --arg version "$version" '.version = $version' custom_components/city_dashboard/manifest.json > manifest.tmp.json
          mv manifest.tmp.json custom_components/city_dashboard/manifest.json

      - name: Commit version bump
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add custom_components/city_dashboard/manifest.json
          git commit -m "Bump version to ${{ env.version }}"
          git push origin main

      - name: Delete existing GitHub Tag (if exists)
        continue-on-error: true
        run: |
          git tag -d v${{ env.version }} || true
          git push --delete origin v${{ env.version }} || true

      - name: Create GitHub Tag
        run: |
          git tag -a v${{ env.version }} -m "Release v${{ env.version }}"
          git push origin v${{ env.version }}

      - name: Build HACS frontend
        run: npm install && npm run build:hacs

      - name: Prepare HACS package
        run: |
          mkdir -p hacs-release/custom_components/city_dashboard
          mkdir -p hacs-release/www/community/city_dashboard
      
          # Копируем файлы компонента
          cp custom_components/city_dashboard/* hacs-release/custom_components/city_dashboard/
      
          # Копируем собранные файлы
          cp -r www/community/city_dashboard/* hacs-release/www/community/city_dashboard/
      
          # Упаковываем релиз
          tar -czvf hacs-release.tar.gz -C hacs-release .

      - name: Upload HACS Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: "Release v${{ env.version }}"
          body: "Automated release for HACS"
          draft: false
          prerelease: false
          files: |
            hacs-release.tar.gz
            custom_components/city_dashboard/manifest.json
            www/community/city_dashboard/dashboard.js
            www/community/city_dashboard/assets/*